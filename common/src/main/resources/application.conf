include "serialization.conf"

akka.persistence.query.journal.id = "cassandra-query-journal"

akka.http.server.preview.enable-http2 = on

hmda {
  loader.parallelism = 4
  http {
    timeout = 3
  }
  actor {
    timeout = 5
  }

  filing {
    first_year = 2018
    current = 2018
    2018 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2018EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME}
      year = 2018
    }
    2019 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2019EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME}
      year = 2019
    }
  }

  census {
    fields.filename = "census_2018_MSAMD_name.txt"
    fields.filename = ${?CENSUS_FILENAME}
  }

  countyLoanLimit {
    fields.filename = "FullCountyLoanLimitList2018.txt"
    fields.filename = ${?COUNTY_LOAN_LIMIT_FILENAME}
  }

  kafka {
    topics {
      institutionTopic = "institution"
      institutionTopic = ${?KAFKA_INSTITUTIONS_TOPIC}
      signTopic = "hmda-sign"
      signTopic = ${?KAFKA_SIGN_TOPIC}
      modifiedLarTopic = "hmda-modified-lar"
      modifiedLarTopic = ${?KAFKA_MODIFIED_LAR_TOPIC}
      irsTopic = "hmda-irs"
      irsTopic = ${?KAFKA_IRS_TOPIC}
      analyticsTopic = "hmda-analytics"
      analyticsTopic = ${?KAFKA_ANALYTICS_TOPIC}
      disclosureTopic = "hmda-spark-disclosure"
      disclosureTopic = ${?KAFKA_DISCLOSURE_TOPIC}
      adTopic = "hmda-spark-ad"
      adTopic = ${?KAFKA_AD_TOPIC}
    }
    groups {
      modifiedLarGroup = "modified-lar-group"
      modifiedLarGroup = ${?KAFKA_MODIFIED_LAR_GROUP}
      analyticsGroup = "analytics-group"
      analyticsGroup = ${?KAFKA_ANALYTICS_GROUP}
      irsGroup = "irs-group"
      irsGroup = ${?KAFKA_IRS_GROUP}
      institutionsGroup = "institutions-group"
      institutionsGroup = ${?KAFKA_INSTITUTIONS_GROUP}
    }
  }
}

dbconfig {
  host = "192.168.99.100"
  host = ${?PG_HOST}
  port = 5432
  port = ${?PG_PORT}
  database = "hmda"
  database = ${?PG_DATABASE}
  user = "postgres"
  user = ${?PG_USER}
  password = "postgres"
  password = ${?PG_PASSWORD}
  ssl = "require"
  ssl = ${?PG_SSL}
  additionalConfig="ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory"
  additionalConfig=${?PG_ADDCONFIG}
}

db {
  driver = "slick.driver.PostgresDriver$"

  db {
    driver = org.postgresql.Driver
    url = "jdbc:postgresql://"${dbconfig.host}":"${dbconfig.port}"/"${dbconfig.database}"?user="${dbconfig.user}"&password="${dbconfig.password}"&sslmode="${dbconfig.ssl}"&"${dbconfig.additionalConfig}
    url = ${?JDBC_URL}
    numThreads = 2
  }
}

keycloak {
  realm = "hmda2"
  client.id = "hmda2-api"
  client.id = ${?KEYCLOAK_HMDA_API_CLIENT_ID}
  public.key.id = "AYUeqDHLF_GFsZYOSMXzhBT4zyQS--KiEmBFvMzJrBA"
  public.key = ${?KEYCLOAK_PUBLIC_KEY_ID}
  auth.server.url = "http://192.168.99.100:31752/auth/"
  auth.server.url = ${?KEYCLOAK_AUTH_URL}
  hmda.admin.role = "hmda-admin"
  hmda.admin.role = ${?KEYCLOAK_HMDA_ADMIN_ROLE}
}
